import streamlit as st
from PIL import Image
from transformers import BlipProcessor, BlipForConditionalGeneration
from huggingface_hub import InferenceClient
import torch

# 🧾 Set page title early
st.set_page_config(page_title="AI Radiology Report Generator", layout="centered")

# 🧠 Load BLIP for image captioning
@st.cache_resource
def load_blip_model():
    processor = BlipProcessor.from_pretrained("Salesforce/blip-image-captioning-base")
    model = BlipForConditionalGeneration.from_pretrained("Salesforce/blip-image-captioning-base")
    return processor, model

processor, blip_model = load_blip_model()

# 🔐 Get Hugging Face token securely from secrets.toml
HF_TOKEN = st.secrets.get("HF_TOKEN")

# 💬 Create Hugging Face inference client
client = InferenceClient("tiiuae/falcon-rw-1b", token=HF_TOKEN)

# 📝 Function to generate the report
def generate_radiology_report(caption: str) -> str:
    prompt = f"""
You are a professional radiologist.

A chest X-ray has been described as: "{caption}"

Write a structured radiology report including:

**Findings**: Describe anatomical details and observations.

**Impression**: Provide diagnostic interpretation.
"""
    response = client.text_generation(prompt=prompt, max_new_tokens=400, temperature=0.7)
    return response.strip()

# 🖼️ App interface
st.title("🩻 AI Radiology Report Generator")
st.caption("Upload a chest X-ray and get a clinical-style report generated by an AI model.")

uploaded_file = st.file_uploader("📤 Upload a Chest X-ray Image", type=["jpg", "jpeg", "png"])

if uploaded_file:
    image = Image.open(uploaded_file).convert("RGB")
    st.image(image, caption="📷 Uploaded Chest X-ray", use_column_width=True)

    with st.spinner("🔍 Describing the image using BLIP..."):
        inputs = processor(image, return_tensors="pt")
        outputs = blip_model.generate(**inputs, max_new_tokens=50)
        caption = processor.decode(outputs[0], skip_special_tokens=True)
        st.markdown(f"🧠 **Visual Description:** _{caption}_")

    with st.spinner("📝 Generating Radiology Report using Falcon RW 1B..."):
        report = generate_radiology_report(caption)
        st.markdown("### 📄 Generated Radiology Report")
        st.write(report)

    st.markdown("---")
    st.caption("⚠️ This is a research prototype. Generated reports are not for clinical use.")
